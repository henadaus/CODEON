
import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.nio.channels.FileChannel;
import javax.swing.ImageIcon;
import java.io.BufferedReader;
import java.io.FileWriter;
import javax.swing.JOptionPane;


/**
 *
 * @author hena
 */
public class JudgePlatform extends javax.swing.JFrame {
int round;
String qno=null;
String lang=null;
String code=null;
    
    public JudgePlatform(int r,String q) {
        this.round=r;
        this.qno=q;
        initComponents();
        this.setTitle("CODEON");
        ImageIcon icon = new ImageIcon(this.getClass().getResource("coding1.jpeg"));
        this.setIconImage(icon.getImage());
        this.getContentPane().setBackground(Color.DARK_GRAY);
        quesList.setSelectedItem((Object)qno);
        compile.setEnabled(false);
        run.setEnabled(false);
         String h=""+roundName.getText()+" "+round;
        roundName.setText(h);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        quesList = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        langList = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        codeArea = new javax.swing.JTextArea();
        save = new javax.swing.JButton();
        compile = new javax.swing.JButton();
        run = new javax.swing.JButton();
        roundName = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputArea = new javax.swing.JTextArea();
        back = new javax.swing.JButton();
        close = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        quesList.setFont(new java.awt.Font("TlwgTypewriter", 1, 14)); // NOI18N
        quesList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select--", "A", "B", "C", "D", "E", "F" }));
        quesList.setToolTipText("Choose question");

        jLabel1.setFont(new java.awt.Font("TlwgTypewriter", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(34, 21, 213));
        jLabel1.setText("QUESTION :");

        jLabel2.setFont(new java.awt.Font("TlwgTypewriter", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(8, 17, 233));
        jLabel2.setText("LANGUAGE :");

        langList.setFont(new java.awt.Font("TlwgTypewriter", 1, 14)); // NOI18N
        langList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select--", "C", "C++", "Java" }));
        langList.setToolTipText("Choose language");
        langList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                langListActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("TlwgTypewriter", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(30, 24, 246));
        jLabel3.setText("CODE :");

        codeArea.setColumns(20);
        codeArea.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        codeArea.setForeground(new java.awt.Color(18, 112, 11));
        codeArea.setRows(5);
        codeArea.setToolTipText("Code here.");
        jScrollPane1.setViewportView(codeArea);

        save.setFont(new java.awt.Font("TlwgTypewriter", 1, 14)); // NOI18N
        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1450433383_save_accept.png"))); // NOI18N
        save.setText("SAVE");
        save.setToolTipText("Save code");
        save.setMaximumSize(new java.awt.Dimension(156, 33));
        save.setMinimumSize(new java.awt.Dimension(156, 33));
        save.setPreferredSize(new java.awt.Dimension(146, 33));
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        compile.setFont(new java.awt.Font("TlwgTypewriter", 1, 14)); // NOI18N
        compile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1450433312_compile.png"))); // NOI18N
        compile.setText("COMPILE");
        compile.setToolTipText("Compile code");
        compile.setMaximumSize(new java.awt.Dimension(146, 33));
        compile.setMinimumSize(new java.awt.Dimension(146, 33));
        compile.setPreferredSize(new java.awt.Dimension(146, 33));
        compile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compileActionPerformed(evt);
            }
        });

        run.setFont(new java.awt.Font("TlwgTypewriter", 1, 14)); // NOI18N
        run.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1450433270_Run.png"))); // NOI18N
        run.setToolTipText("Run code");
        run.setMaximumSize(new java.awt.Dimension(146, 33));
        run.setMinimumSize(new java.awt.Dimension(146, 33));
        run.setPreferredSize(new java.awt.Dimension(146, 33));
        run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runActionPerformed(evt);
            }
        });

        roundName.setFont(new java.awt.Font("TlwgTypewriter", 1, 18)); // NOI18N
        roundName.setForeground(new java.awt.Color(219, 23, 39));
        roundName.setText("ROUND ");

        outputArea.setColumns(20);
        outputArea.setRows(5);
        outputArea.setToolTipText("See results here..");
        jScrollPane2.setViewportView(outputArea);

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1450433422_Back.png"))); // NOI18N
        back.setToolTipText("Go Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1450433401_Delete.png"))); // NOI18N
        close.setToolTipText("Close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back)
                        .addGap(167, 167, 167)
                        .addComponent(roundName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(close))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                                        .addComponent(compile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(106, 106, 106)
                                        .addComponent(run, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(56, 56, 56))
                                    .addComponent(jScrollPane1)
                                    .addComponent(jScrollPane2)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(152, 152, 152)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(quesList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(langList, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 39, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(roundName))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(close)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quesList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(langList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(run, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(compile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
    }//GEN-LAST:event_formWindowActivated

    private void langListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_langListActionPerformed
        if(langList.getSelectedIndex()==1)//C code
        {
            try{
                String tem=null;
            copy("templateC.c","Main.c");
            
            tem=readfile(""+round+"/"+qno+"/"+"Main.c");
            codeArea.setText(tem);
            }
            catch(IOException e){}
            
            
        }
        else 
        if(langList.getSelectedIndex()==2)
        {
            try{
            String tem=null;
            copy("template.cpp","Main.cpp");
            tem=readfile(""+round+"/"+qno+"/"+"Main.cpp");
            codeArea.setText(tem);
            }
            catch(IOException e){}
        }
        else if(langList.getSelectedIndex()==3)
        {
            try{
            String tem=null;
            copy("Main.java","Main.java");
            tem=readfile(""+round+"/"+qno+"/"+"Main.java");
            codeArea.setText(tem);
            }
            catch(IOException e){}
        }
              
    }//GEN-LAST:event_langListActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        String c=codeArea.getText();
        if(langList.getSelectedIndex()==1){
        try{
        File f1=new File(""+round+"/"+qno+"/"+"Main.c");
        FileWriter fw=new FileWriter(f1);
        fw.write(c);
        fw.close();}
        catch(IOException e){}
        }
        else
        if(langList.getSelectedIndex()==2)
        {
            try{
        File f1=new File(""+round+"/"+qno+"/"+"Main.cpp");
        FileWriter fw=new FileWriter(f1);
        fw.write(c);
        fw.close();}
        catch(IOException e){}
        }
        else
        if(langList.getSelectedIndex()==3)
        {
        try{
        File f1=new File(""+round+"/"+qno+"/"+"Main.java");
        FileWriter fw=new FileWriter(f1);
        fw.write(c);
        fw.close();}
        catch(IOException e){}
        }
        else
        {
           
        }
        compile.setEnabled(true);
    }//GEN-LAST:event_saveActionPerformed

    private void compileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compileActionPerformed
        Judge J=new Judge();
        String curdir=""+round+"/"+qno+"/";
       String output=J.compile(langList.getSelectedItem().toString(),curdir);
       
       outputArea.setText(output);
       run.setEnabled(true);
    }//GEN-LAST:event_compileActionPerformed

    private void runActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runActionPerformed
        outputArea.setText("");
        Judge J=new Judge();
        String curdir=""+round+"/"+qno+"/";
        int incounter=0;
        String tem=null;
        StringBuilder g=new StringBuilder();
        while((new File(""+curdir+"in"+incounter+".txt").exists()))
                {
                    String output=J.run(langList.getSelectedItem().toString(), incounter, curdir,""+curdir+"in"+incounter+".txt");
                    System.out.println("Outcome is "+output);
                    System.out.println("Running on test case "+(incounter+1));
            switch (output) {
                case "SIGSEV":
                    
                    outputArea.setText("Run time error!! :( ");
                    break;
                case "Run_success":
                    try{
                        System.out.println(output);
                        g.append(output).append("\n");
                        g.append("Input :\n");
                        tem=readfile(""+curdir+"in"+incounter+".txt");
                        System.out.println("Input:"+tem);
                        g.append(tem).append("\n\n");
                        tem=null;
                        g.append("Your output :\n");
                        tem=readfile(""+curdir+"o"+incounter+".txt");
                        System.out.println("Your output:"+tem);
                        g.append(tem).append("\n\n");
                        tem=null;
                        g.append("Correct output :"+"\n");
                        tem=readfile(""+curdir+"out"+incounter+".txt");
                        System.out.println("Correct output:"+tem);
                        g.append(tem).append("\n\n");
                        g.append("--------------------------------------------------\n");
                        outputArea.setText(g.toString());}
                    catch(IOException e){}
                    break;
            }
                    incounter++;
                }
    }//GEN-LAST:event_runActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        QuesDisplay q=new QuesDisplay(round);
        this.hide();
        q.show();
    }//GEN-LAST:event_backActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        System.exit(0);
    }//GEN-LAST:event_closeActionPerformed
private void copy(String s,String d) throws IOException
{
     File srcfile=new File(s);
            File desfile=new File(""+round+"/"+qno+"/"+d);
            if(!desfile.exists())
                desfile.createNewFile();
            
            FileChannel source=null;
            FileChannel destination=null;
            try{
                source=new FileInputStream(srcfile).getChannel();
                destination=new FileOutputStream(desfile).getChannel();
                if(destination!=null && source!=null)
                {
                    destination.transferFrom(source, 0,source.size());
                }
            }catch(FileNotFoundException e)
            {}
              finally{
                if(source!=null)
                    source.close();
                if(destination!=null)
                    destination.close();
            }
}
String readfile(String filename) throws IOException
{
    BufferedReader br=new BufferedReader(new FileReader(filename));
    try{
        StringBuilder sb=new StringBuilder();
        String line=br.readLine();
        while(line!=null){
            sb.append(line);
            sb.append("\n");
            line=br.readLine();
        }
        return sb.toString();
    }
    finally{
        br.close();
                
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JudgePlatform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JudgePlatform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JudgePlatform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JudgePlatform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new JudgePlatform().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton close;
    private javax.swing.JTextArea codeArea;
    private javax.swing.JButton compile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox langList;
    private javax.swing.JTextArea outputArea;
    private javax.swing.JComboBox quesList;
    private javax.swing.JLabel roundName;
    private javax.swing.JButton run;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
}
